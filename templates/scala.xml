<templateSet group="scala">
  <template name="main" value="def main(args: Array[String]){&#10;  $END$&#10;}" description="Template for main method" toReformat="true" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
  <template name="opt" value="$OPTION$ match {&#10;  case Some($NAME$) =&gt; $END$&#10;  case None =&gt;&#10;}" description="Template for matching Option type" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="OPTION" expression="scalaVariableOfType(&quot;scala.Option&quot;)" defaultValue="option" alwaysStopAt="true" />
    <variable name="NAME" expression="suggestScalaVariableName(&quot;option&quot;, OPTION)" defaultValue="x" alwaysStopAt="true" />
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
  <template name="itr" value="for ($NAME$ &lt;- $FOR$ $GUARD$) {&#10;  $END$&#10;  }" description="Template for scala foreach" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="FOR" expression="scalaVariableOfType(&quot;foreach&quot;)" defaultValue="option" alwaysStopAt="true" />
    <variable name="NAME" expression="suggestScalaVariableName(&quot;foreach&quot;, FOR)" defaultValue="x" alwaysStopAt="true" />
    <variable name="GUARD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
  <template name="itry" value="for ($NAME$ &lt;- $FOR$ $GUARD$) yield {&#10;  $END$&#10;  }" description="Template for scala foreach" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="FOR" expression="scalaVariableOfType(&quot;foreach&quot;)" defaultValue="option" alwaysStopAt="true" />
    <variable name="NAME" expression="suggestScalaVariableName(&quot;foreach&quot;, FOR)" defaultValue="x" alwaysStopAt="true" />
    <variable name="GUARD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
  <template name="T" value="&lt;$TAG$&gt;$SELECTION$&lt;/$TAGNAME$&gt;&#10;" description="Surround with &lt;tag&gt;&lt;/tag&gt;" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="TAG" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TAGNAME" expression="firstWord(TAG)" defaultValue="&quot;&quot;" alwaysStopAt="false" />
    <context>
      <option name="SCALA_XML" value="true" />
    </context>
  </template>
  <template name="priv" value="println(&quot;$EXPR_COPY$ = &quot; + $EXPR$)" description="Template for expressions output" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="EXPR" expression="scalaVariableOfType(&quot;&quot;)" defaultValue="false" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="SCALA_CODE" value="true" />
    </context>
  </template>
  <template name="=&gt;" value="⇒ " shortcut="SPACE" toReformat="false" toShortenFQNames="false">
    <context />
  </template>
  <template name="&lt;-" value="← " shortcut="SPACE" toReformat="false" toShortenFQNames="false">
    <context />
  </template>
</templateSet>